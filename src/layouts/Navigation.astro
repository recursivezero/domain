---
import Link from "@/components/Link.astro";
import type { LinkProps } from "@/models";

interface Props {
  pages: LinkProps[];
}

const { pages } = Astro.props;
const currentPath = Astro.url.pathname;

// Helper function to check if a path is active (exact match or active parent)
const isActive = (path: string) => {
  if (path === "/") {
    return currentPath === "/";
  }
  return currentPath === path || currentPath.startsWith(`${path}/`);
};
---

<nav class="nav">
  <ul class="nav__list">
    {
      pages
        .filter((p) => p.isActive)
        .map((p) => (
          <li class="nav__list__item">
            <Link href={p.path} name={p.name!} class={isActive(p.path) ? "active" : ""} />
          </li>
        ))
    }
  </ul>
</nav>

<style>
  .nav {
    @apply flex items-center;
  }

  .nav__list {
    @apply m-0 flex list-none gap-4 p-0;
  }

  .nav__list__item {
    @apply relative;
  }

  /* Active link styles */
  .nav__list__item :global(a.active) {
    @apply relative;
  }

  .nav__list__item :global(a.active)::after {
    content: "";
    @apply absolute bottom-0 left-0 h-0.5 w-full scale-x-100 transform bg-current;
    animation: borderSlide 0.3s ease-out;
  }

  @keyframes borderSlide {
    from {
      transform: scaleX(0);
    }
    to {
      transform: scaleX(1);
    }
  }
</style>
